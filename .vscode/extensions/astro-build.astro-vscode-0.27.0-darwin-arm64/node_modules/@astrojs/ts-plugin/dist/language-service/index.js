var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
__markAsModule(exports);
__export(exports, {
  decorateLanguageService: () => decorateLanguageService
});
var import_utils = __toModule(require("../utils.js"));
var import_completions = __toModule(require("./completions.js"));
var import_definition = __toModule(require("./definition.js"));
var import_diagnostics = __toModule(require("./diagnostics.js"));
var import_find_references = __toModule(require("./find-references.js"));
var import_implementation = __toModule(require("./implementation.js"));
var import_rename = __toModule(require("./rename.js"));
function decorateLanguageService(ls, snapshotManager, logger) {
  patchLineColumnOffset(ls, snapshotManager);
  (0, import_rename.decorateRename)(ls, snapshotManager, logger);
  (0, import_diagnostics.decorateDiagnostics)(ls, logger);
  (0, import_find_references.decorateFindReferences)(ls, snapshotManager, logger);
  (0, import_completions.decorateCompletions)(ls, logger);
  (0, import_definition.decorateGetDefinition)(ls, snapshotManager, logger);
  (0, import_implementation.decorateGetImplementation)(ls, snapshotManager, logger);
  return ls;
}
function patchLineColumnOffset(ls, snapshotManager) {
  if (!ls.toLineColumnOffset) {
    return;
  }
  const toLineColumnOffset = ls.toLineColumnOffset;
  ls.toLineColumnOffset = (fileName, position) => {
    if ((0, import_utils.isAstroFilePath)(fileName)) {
      const snapshot = snapshotManager.get(fileName);
      if (snapshot) {
        return snapshot.positionAt(position);
      }
    }
    return toLineColumnOffset(fileName, position);
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decorateLanguageService
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2xhbmd1YWdlLXNlcnZpY2UvaW5kZXgudHMiXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQSxtQkFBZ0M7QUFDaEMseUJBQW9DO0FBQ3BDLHdCQUFzQztBQUN0Qyx5QkFBb0M7QUFDcEMsNkJBQXVDO0FBQ3ZDLDRCQUEwQztBQUMxQyxvQkFBK0I7QUFFeEIsaUNBQ04sSUFDQSxpQkFDQSxRQUNxQjtBQUNyQix3QkFBc0IsSUFBSTtBQUMxQixvQ0FBZSxJQUFJLGlCQUFpQjtBQUNwQyw4Q0FBb0IsSUFBSTtBQUN4QixxREFBdUIsSUFBSSxpQkFBaUI7QUFDNUMsOENBQW9CLElBQUk7QUFDeEIsK0NBQXNCLElBQUksaUJBQWlCO0FBQzNDLHVEQUEwQixJQUFJLGlCQUFpQjtBQUMvQyxTQUFPO0FBQUE7QUFHUiwrQkFBK0IsSUFBd0IsaUJBQXVDO0FBQzdGLE1BQUksQ0FBQyxHQUFHLG9CQUFvQjtBQUMzQjtBQUFBO0FBSUQsUUFBTSxxQkFBcUIsR0FBRztBQUM5QixLQUFHLHFCQUFxQixDQUFDLFVBQVUsYUFBYTtBQUMvQyxRQUFJLGtDQUFnQixXQUFXO0FBQzlCLFlBQU0sV0FBVyxnQkFBZ0IsSUFBSTtBQUNyQyxVQUFJLFVBQVU7QUFDYixlQUFPLFNBQVMsV0FBVztBQUFBO0FBQUE7QUFHN0IsV0FBTyxtQkFBbUIsVUFBVTtBQUFBO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
