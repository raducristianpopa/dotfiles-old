var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
__markAsModule(exports);
__export(exports, {
  decorateFindReferences: () => decorateFindReferences
});
var import_utils = __toModule(require("../utils.js"));
function decorateFindReferences(ls, snapshotManager, logger) {
  decorateGetReferencesAtPosition(ls, snapshotManager, logger);
  _decorateFindReferences(ls, snapshotManager, logger);
}
function _decorateFindReferences(ls, snapshotManager, logger) {
  const findReferences = ls.findReferences;
  ls.findReferences = (fileName, position) => {
    const references = findReferences(fileName, position);
    return references == null ? void 0 : references.map((reference) => {
      const snapshot = snapshotManager.get(reference.definition.fileName);
      if (!(0, import_utils.isAstroFilePath)(reference.definition.fileName) || !snapshot) {
        return reference;
      }
      const textSpan = snapshot.getOriginalTextSpan(reference.definition.textSpan);
      if (!textSpan) {
        return null;
      }
      return {
        definition: __spreadProps(__spreadValues({}, reference.definition), {
          textSpan,
          originalTextSpan: void 0
        }),
        references: mapReferences(reference.references, snapshotManager, logger)
      };
    }).filter(import_utils.isNotNullOrUndefined);
  };
}
function decorateGetReferencesAtPosition(ls, snapshotManager, logger) {
  const getReferencesAtPosition = ls.getReferencesAtPosition;
  ls.getReferencesAtPosition = (fileName, position) => {
    const references = getReferencesAtPosition(fileName, position);
    return references && mapReferences(references, snapshotManager, logger);
  };
}
function mapReferences(references, snapshotManager, logger) {
  return references.map((reference) => {
    const snapshot = snapshotManager.get(reference.fileName);
    if (!(0, import_utils.isAstroFilePath)(reference.fileName) || !snapshot) {
      return reference;
    }
    const textSpan = snapshot.getOriginalTextSpan(reference.textSpan);
    if (!textSpan) {
      return null;
    }
    logger.debug("Find references; map textSpan: changed", reference.textSpan, "to", textSpan);
    return __spreadProps(__spreadValues({}, reference), {
      textSpan,
      contextSpan: void 0,
      originalTextSpan: void 0,
      originalContextSpan: void 0
    });
  }).filter(import_utils.isNotNullOrUndefined);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decorateFindReferences
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2xhbmd1YWdlLXNlcnZpY2UvZmluZC1yZWZlcmVuY2VzLnRzIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQSxtQkFBc0Q7QUFFL0MsZ0NBQ04sSUFDQSxpQkFDQSxRQUNPO0FBQ1Asa0NBQWdDLElBQUksaUJBQWlCO0FBQ3JELDBCQUF3QixJQUFJLGlCQUFpQjtBQUFBO0FBRzlDLGlDQUFpQyxJQUF3QixpQkFBdUMsUUFBZ0I7QUFDL0csUUFBTSxpQkFBaUIsR0FBRztBQUMxQixLQUFHLGlCQUFpQixDQUFDLFVBQVUsYUFBYTtBQUMzQyxVQUFNLGFBQWEsZUFBZSxVQUFVO0FBQzVDLFdBQU8seUNBQ0osSUFBSSxDQUFDLGNBQWM7QUFDcEIsWUFBTSxXQUFXLGdCQUFnQixJQUFJLFVBQVUsV0FBVztBQUMxRCxVQUFJLENBQUMsa0NBQWdCLFVBQVUsV0FBVyxhQUFhLENBQUMsVUFBVTtBQUNqRSxlQUFPO0FBQUE7QUFHUixZQUFNLFdBQVcsU0FBUyxvQkFBb0IsVUFBVSxXQUFXO0FBQ25FLFVBQUksQ0FBQyxVQUFVO0FBQ2QsZUFBTztBQUFBO0FBR1IsYUFBTztBQUFBLFFBQ04sWUFBWSxpQ0FDUixVQUFVLGFBREY7QUFBQSxVQUVYO0FBQUEsVUFFQSxrQkFBa0I7QUFBQTtBQUFBLFFBRW5CLFlBQVksY0FBYyxVQUFVLFlBQVksaUJBQWlCO0FBQUE7QUFBQSxPQUdsRSxPQUFPO0FBQUE7QUFBQTtBQUlYLHlDQUNDLElBQ0EsaUJBQ0EsUUFDQztBQUNELFFBQU0sMEJBQTBCLEdBQUc7QUFDbkMsS0FBRywwQkFBMEIsQ0FBQyxVQUFVLGFBQWE7QUFDcEQsVUFBTSxhQUFhLHdCQUF3QixVQUFVO0FBQ3JELFdBQU8sY0FBYyxjQUFjLFlBQVksaUJBQWlCO0FBQUE7QUFBQTtBQUlsRSx1QkFDQyxZQUNBLGlCQUNBLFFBQ3NCO0FBQ3RCLFNBQU8sV0FDTCxJQUFJLENBQUMsY0FBYztBQUNuQixVQUFNLFdBQVcsZ0JBQWdCLElBQUksVUFBVTtBQUMvQyxRQUFJLENBQUMsa0NBQWdCLFVBQVUsYUFBYSxDQUFDLFVBQVU7QUFDdEQsYUFBTztBQUFBO0FBR1IsVUFBTSxXQUFXLFNBQVMsb0JBQW9CLFVBQVU7QUFDeEQsUUFBSSxDQUFDLFVBQVU7QUFDZCxhQUFPO0FBQUE7QUFHUixXQUFPLE1BQU0sMENBQTBDLFVBQVUsVUFBVSxNQUFNO0FBRWpGLFdBQU8saUNBQ0gsWUFERztBQUFBLE1BRU47QUFBQSxNQUVBLGFBQWE7QUFBQSxNQUNiLGtCQUFrQjtBQUFBLE1BQ2xCLHFCQUFxQjtBQUFBO0FBQUEsS0FHdEIsT0FBTztBQUFBOyIsCiAgIm5hbWVzIjogW10KfQo=
